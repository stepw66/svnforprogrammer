# Chapter 7 การแตก Branch #

ผมอยากให้ท่านลองหลับตาแล้วจินตนาการว่าตอนนี้ท่านอยู่ในทีมโปรแกรมเมอร์ประมาณ 20 คน ทีนี้เขาวางแผนกันว่าจะแยกทีมออกเป็น 2 ทีม ให้รับผิดชอบกันคนละฟีเจอร์  ทีมหนึ่งรับผิดชอบทำส่วนของ frontend อีกทีมหนึ่งทำส่วนของ backend ทั้งสองทีมนี้มีทางเลือกที่จะทำงานร่วมกันอยู่ 2 วิธี โดยทั่วๆไป

1. จัดทีมให้นั่งใกล้ๆกัน ทำงานบนโฟลเดอร์เดียวกัน โดยใช้วิธีแชร์ให้กัน
2. แยกสองทีมต่างฝ่ายต่างทำ ค่อยเอาโค้ดมารวมกันทีหลัง

ทั้งสองวิธีมีจุดลำบากมากมาย วุ่นวายมากตอนเอาโค้ดรวมกัน และทำให้เสียเวลามาก

ด้วยเหตุนี้ ตอนเขาสร้าง SVN ขึ้นมาเขาจึงออกแบบให้มีการแตกสาขาการพัฒนา ออกเป็น branch ถ้าทีมมี 2 ทีมที่ทำฟีเจอร์ต่างกัน เขาก็จะแตก branch ออกเป็น 2 branch เมื่อทำเสร็จก็จะเอาโค้ดมารวมกัน โดย SVN มันจะเป็นตัวดูแลเองว่ามีการแก้ไขไฟล์ที่ชื่อเดียวกัน ตำแหน่งเดียวกันบ้างหรือเปล่า ถ้าหากมันตัดสินใจได้ว่าจะใช้โค้ดของฝั่งใดฝั่งหนึ่ง ก็ไม่มีปัญหา แต่ถ้ามันตัดสินใจไม่ได้ว่าจะเอาโค้ดของทีมไหน มันก็จะแจ้งเป็น conflict ให้เราเป็นคนเลือกเองว่าจะทำอย่างไร 

ผมเล่าใหม่อีกครั้ง การใช้งาน SVN ตอนแรกที่เราสร้างโปรเจ็ก มันจะมี branch มาให้เราก่อนเลย 1 branch ชื่อ master 

branch master นี้เขาเรียกมันว่า trunk และมีกฎตราไว้ว่า branch master จะต้องเชื่อถือได้เสมอ ประมาณว่าถ้าอยากจะเอาโค้ดใน master ขึ้น production จะต้องทำได้โดยไม่ลังเลใดๆ  เพราะฉะนั้นเขาเลยไม่นิยม dev กันใน branch master 

เมื่อจะเขียนโค้ดเราจะทำการแตก branch ออกไปจาก master การแตก branch ออกไปนั้นไม่ว่าเราจะทำอะไรกับ branch นั้นๆ มันจะยังไม่ส่งผลกระทบต่อโค้ดที่อยู่ใน master จนกว่าเราจะทำการรวมโค้ดเข้า master เพื่อเอาขึ้น production แต่ก็นั่นแหละโค้ดใน branch ที่แตกออกไป จะต้องทดสอบแล้วเป็นอย่างดีว่า มีบักน้อย

## การสร้าง project แบบมีโครงสร้าง branch ##

1. เปิดโปรแกรม visualSVN ขึ้นมา

2. คลิกขวาบนเมนู Repositories เลือก Create New Repository...

    ![](images/chapter7/visualsvn-create-project-with-structure-01.png)

3. คลิก Next

    ![](images/chapter7/visualsvn-create-project-with-structure-02.png)

4. ตั้งชื่อ Repository ในที่นี้ตั้งชื่อว่า garagmanagement จากนั้น คลิก Next

    ![](images/chapter7/visualsvn-create-project-with-structure-03.png)

5. ให้เลือกตัวเลือก Single-project repository (with the top-level 'trunk', 'branches', and 'tags' folders) เสร็จแล้วคลิกปุ่ม Next 

    ![](images/chapter7/visualsvn-create-project-with-structure-04.png)

6. เลือกตัวเลือก All Subversion users have Read/Write access เสร็จแล้วคลิกปุ่ม Create 

    ![](images/chapter7/visualsvn-create-project-with-structure-05.png)

7. คลิกปุ่ม Finish 

    ![](images/chapter7/visualsvn-create-project-with-structure-06.png)

เมื่อดู Repository ที่เพิ่งสร้าง จะเห็นโฟลเดอร์อยู่ 3 โฟลเดอร์คือ 

trunk : ไว้เก็บโค้ดที่พร้อมเอาขึ้น production
branches : ไว้เก็บโค้ดที่แตกสาขาการพัฒนาออกไป
tags : ไว้เก็บโค้ด tags (จะอธิบายความหมายของ tags ในบทต่อไป)

![](images/chapter7/visualsvn-create-project-with-structure-07.png)

ทีนี้เมื่อเราเริ่ม dev เราจะต้อง สร้าง branch ใหม่สำหรับการ dev หลังทดสอบโค้ดจนเป็นที่มั่นใจแล้วจึง merge โค้ดเข้า trunk เอาขึ้น production ต่อไป

แต่ถ้าหากเรามีโค้ดเบื้องต้นอยู่ก่อนแล้ว ให้เรา checkout trunk ออกมาก่อน จากนั้นเอาโค้ดเบื้องต้นของเรานั้น commit เข้า trunk ไว้แล้วค่อยแตก branch มาจาก trunk อีกที

## การแตก branch ##

สำหรับการแตก branch นั้นสามารถทำได้ด้วย tortoiseSVN 