# Branching #

การแตก Branch ทำเพื่อไม่ให้โค้ดที่ทีมหนึ่งกำลังแก้ไขอยู่ ไปกระทบกับโค้ดที่อีกทีมหนึ่งทำ หรือแตกออกไปเพื่อไม่ให้โค้ดที่กำลังแก้ไขกระทบกับโค้ดหลัก

การแตก Branch นั้นก็เหมือนกันกับก้อปปี้โค้ดจากต้นฉบับไปใส่ไว้ในอีกโฟลเดอร์ แล้วแก้โค้ดกันในโฟลเดอร์นั้น เมื่อแก้เสร็จค่อยรวมโค้ดเข้ามาที่โค้ดหลักอีกที โดยตัว SVN จะเป็นตัวคอยควบคุมการทำงานอยู่เบื้องหลัง มันรู้ของมันเองว่าจะรวมโค้ดกันยังไง แตก Branch ออกไปตั้งแต่ตอนไหน ใครเป็นคนเขียนโค้ดบรรทัดไหน เป็นต้น

ผมอยากให้ดูภาพนี้

![](images/chapter7/branching.jpg)

เป็นภาพแนวทางการแตก Branch 

Trunk คือที่เก็บโค้ดที่รันได้ ไม่มีบัก หรือหากจะมีก็มีน้อย หรือจะเรียกว่าที่เก็บโค้ดที่พร้อมเอาขึ้น production หรือพร้อมส่งลุกค้าก็ได้  เขาจะไม่ Dev กันใน Trunk (มันก็คือ Branch หนึ่งนั่นแหละ)

หากเรามีทีม 2 ทีม ที่วางแผนกันแล้วว่าจะแยกกันพัฒนาคนละฟีเจอร์ แล้วค่อยเอามารวมกันทีหลัง ก็แตก Branch ออกมา 2 Branch คือ Branch 1 และ Branch 2

Branch คือที่เก็บโค้ดที่ก้อปปี้มาจาก Trunk

หลังจากทีม Dev เขียนโค้ดจนครบฟีเจอร์ที่ต้องการ และทดสอบอย่างดีแล้ว ก็เอาโค้ดมารวมเข้าไปยัง Trunk (จากนั้นอาจจะลบ Branch 1 ทิ้งไปเลย แล้วค่อยแตกใหม่มาจาก Trunk อีก)

เมื่อใดก็ตามที่เอาโค้ดขึ้นโปรดักษ์ชั่น หรือส่งโปรแกรมให้ลูกค้า หรือปล่อยโปรแกรมออกสู่สาธารณ เขาจะทำการ Tag เวอชั่นไว้ เป็นการทำ release

Tag คือที่เก็บโค้ด release จะว่าไปแล้วมันก็เป็น Branch Branch หนึ่งที่จะสร้างตอน release และไม่มีใครไป Dev ใน Tag

## การแตก Branch ตั้งแต่สร้าง Repository##

1. เปิดโปรแกรม visualSVN ขึ้นมา

2. คลิกขวาบนเมนู Repositories เลือก Create New Repository...

    ![](images/chapter7/visualsvn-create-project-with-structure-01.png)

3. คลิก Next

    ![](images/chapter7/visualsvn-create-project-with-structure-02.png)

4. ตั้งชื่อ Repository ในที่นี้ตั้งชื่อว่า garagmanagement จากนั้น คลิก Next

    ![](images/chapter7/visualsvn-create-project-with-structure-03.png)

5. ให้เลือกตัวเลือก Single-project repository (with the top-level 'trunk', 'branches', and 'tags' folders) เสร็จแล้วคลิกปุ่ม Next 

    ![](images/chapter7/visualsvn-create-project-with-structure-04.png)

6. เลือกตัวเลือก All Subversion users have Read/Write access เสร็จแล้วคลิกปุ่ม Create 

    ![](images/chapter7/visualsvn-create-project-with-structure-05.png)

7. คลิกปุ่ม Finish 

    ![](images/chapter7/visualsvn-create-project-with-structure-06.png)

เมื่อดู Repository ที่เพิ่งสร้าง จะเห็นโฟลเดอร์อยู่ 3 โฟลเดอร์คือ 

trunk : ไว้เก็บโค้ดที่พร้อมเอาขึ้น production
branches : ไว้เก็บโค้ดที่แตกสาขาการพัฒนาออกไป
tags : ไว้เก็บโค้ด tags (จะอธิบายความหมายของ tags ในบทต่อไป)

![](images/chapter7/visualsvn-create-project-with-structure-07.png)


## การแตก Branch ภายหลังสร้าง Repository ไปแล้ว (Repository เปล่า)##

ผมจะจินตนาการว่าท่านได้ Checkout โค้ดลงมาที่เครื่องท่านแล้ว 

1. คลิกขวาบนโฟลเดอร์โปรเจ็กที่ Checkout จาก Repository มาที่เครื่อง เลือก TortoiseSVN \> Branch/Tag...

    ![](images/chapter7/branching-01.png)

2. ในช่อง To path ป้อน /trunk เพื่อแตก Branch trunk ส่วนในช่อง Log message ให้ป้อนหมายเหตุว่าทำอะไร ในที่นี้ป้อนว่า Create trunk เสร็จแล้วคลิกปุ่ม OK

    ![](images/chapter7/branching-02.png)

    ถ้าท่านเปิดเข้าไปดูในโฟลเดอร์ที่ท่าน Checkout มา ท่านจะไม่เห็นโฟลเดอร์ trunk อยู่ในนั้นเพราะมันถูกสร้างบนส่วนเซิฟเวอร์ 

3. ต่อไปเราจะสร้าง Branch branches เพื่อเก็บ branch ย่อยไว้ภายใน คลิกขวาบนโฟลเดอร์โปรเจ็ก เลือก  TortoiseSVN \> Branch/Tag...

    ![](images/chapter7/branching-01.png) 

4. ในช่อง To path ป้อน /branches เพื่อแตก Branch branches ให้เป็น Branch container เก็บ Branch ย่อยอีกที ส่วนในช่อง Log message ให้ป้อนหมายเหตุว่าทำอะไร ในที่นี้ป้อนว่า Create branches เสร็จแล้วคลิกปุ่ม OK

    ![](images/chapter7/branching-04.png)

5. ต่อไปเราจะสร้าง Branch ที่ใช้สำหรับทำงานซึ่งเก็บอยู่ใน branches อีกที คลิกขวาบนโฟลเดอร์โปรเจ็ก เลือก  TortoiseSVN \> Branch/Tag...

    ![](images/chapter7/branching-01.png) 

6. ในช่อง To path ป้อน /branches/feature1 เพื่อแตก Branch ส่วนในช่อง Log message ให้ป้อนหมายเหตุว่าทำอะไร ในที่นี้ป้อนว่า Create branche เสร็จแล้วคลิกปุ่ม OK

    ![](images/chapter7/branching-05.png)

7. การสร้าง Tag ก็เหมือนกับการแตก branch ธรรมดา

โครงสร้างในการบริหารโปรเจ็กหรือทำงานภายในทีม จริงๆไม่จำเป็นต้องเป็น trunk, branches, tags  ก็ได้ จะตั้งชื่อเป็นอะไรก็ได้ จะแตกยังไงก็ได้ แต่มันไม่เป็นสากล เวลาคนอื่นเข้ามาร่วมแจมทีม เขาจะงง หรือหากเราไปแจมบริษัทอื่นที่เขาใช้ SVN เราก็อาจจะงง เพราะเราไม่เหมือนชาวบ้าน 

ฉะนั้นทางที่ดี เขานิยมทำกันแบบไหนก็ทำตามแบบนั้นแหละ ดีที่สุด