## SVN คืออะไร ##

SVN เป็นโปรแกรมตัวหนึ่งที่อยู่ในกลุ่ม SCM หรือ Source Control Management (บริหารจัดการซอร์สโค้ด) มันจะคอยทำหน้าที่เหมือนเครื่องจัดเก็บ Backup แต่ไม่ใช่ Backup อย่างที่เราคุ้นเคย แบบก้อปปี้ทั้งโฟลเดอร์แล้วเปลี่ยนเป็นชื่อใหม่พร้อมระบุวันไว้ ไม่ใช่!!! 

Backup ของ SVN จะเหมือน Save Point มากกว่า (เหมือนในเกมส์) แบบที่เขียนๆโปรแกรมไป ทดสอบ เห็นว่าโค้ดทำงานได้อย่างถูกต้องแล้ว จึงทำการ Save Point มันไว้ พร้อมคำอธิบายว่าทำอะไรกับโค้ดลงไป 

คนจะทำหน้าที่กำหนดว่าจะเก็บ Save Point เมื่อไร SVN จะทำหน้าที่รวมรวมรายละเอียดว่าแก้ไขโค้ดบรรทัดไหนไปบ้าง แก้อย่างไร เป็นการเพิ่ม หรือแก้ไข หรือลบออก 

เมื่อเขียนโปรแกรมไปนานๆ เราสามารถย้อนกลับมาคลิกดู Save Point จุดต่างๆได้ 

ที่กล่าวมาข้างต้น เป็นเพียงคุณสมบัติคร่าวๆเท่านั้น SVN ยังมีสิ่งที่มีประโยชน์มหาศาลอีกมาก ติดตามได้ในบทต่อๆไป


## ภาพรวม SVN ##

ผมอยากให้ดูภาพนี้ก่อน ภาพนี้บอกความเป็น SVN ได้ดีที่สุดแล้ว

![ภาพจาก http://commons.wikimedia.org/wiki/File:SVN_Server_Client_Structure.png](images\chapter1\svn_server_client_structure.png)

โมเดลการทำงานของ SVN นั้นเป็นโมเดลที่เขาเรียกว่า Client Server คือจะต้องมีองค์ประกอบ 2 ส่วน ทำงานประสานกัน 

**Server** ส่วน Server ทำหน้าที่เป็นตัวเก็บซอร์สโค้ด เรียกแต่ละโปรเจ็กว่าเป็น 1 Repository

**Client** ส่วน Client ทำหน้าที่ส่งโค้ดที่มีการแก้ไขเข้าไปยัง Server หรือ ดึงโค้ดที่คนอื่นแก้ไขจาก Server มาอัปเดต

เอาล่ะผมขอเล่าใหม่อีกที ขอให้ทำความเข้าใจเบื้องต้นนะครับว่า SVN Server กับ SVN Client สามารถเป็นเครื่องๆเดียวกันได้ มันเป็นโปรแกรม 2 ตัวที่จะคุยกัน ตอนแรกเราจะติดตั้งโปรแกรม SVN Server ไว้ที่เครื่องก่อน จากนั้นสร้าง Repository ขึ้นมา เหตุที่เขาไม่เรียกว่า โปรเจ็ก เพราะว่าจริงๆแล้ว ใน Repository นั้นสามารถส่งอะไรเข้าไปเก็บก็ได้ ไม่ใช่เพียงแค่ Source Code เท่านั้น รูปภาพ ไฟล์เวิร์ด เอ็กเซล ได้หมด หลังจากสร้าง Repository แล้วเราก็ติดตั้ง โปรแกรม SVN Client ลงในเครื่อง จากนั้นทำการ Clone โค้ดลงมาจาก Repository ถ้าหากเป็นโปรเจ็กใหม่ๆยังไม่มีโค้ดใดๆ มันก็เปล่าๆ ลงมาในเครื่องของเราตำแหน่งที่เก็บโปรเจ็ก หากเราใช้ xampp มันก็ใน htdocs ทีนี้เมื่อมีอะไรเปลี่ยนแปลงไปในโฟลเดอร์โปรเจ็กของเรา SVN มันจะจับได้แล้ว เมื่อต้องการทำ Save Point เราก็ Commit โค้ดขึ้นไปเก็บไว้ที่ Repository 

ในกรณีทำงานกันเป็นทีมๆนึงหลายคนในโปรเจ็กเดียวกัน ทุกๆคนก็ Clone โปรเจ็กลงมาจาก Repository เดียวกัน ตอนนี้จะมีคน Commit หลายคนแล้ว ตัว SVN Client มันจะคอยตรวจสอบเองว่าหาก Repository มีการเปลี่ยนแปลง มันจะสั่งให้เรา Update Local working คือมันจะพยายามซิงก์ให้โค้ดของโปรแกรมเมอร์ทุกๆเครื่องเหมือนกัน นั่นเอง


## การวาง Infrastructure ##
**แบบทำงานคนเดียว**  มีเครื่องๆเดียว ติดตั้งทั้ง SVN Server และ SVN Client ไว้ในเครื่องเดียว 

**แบบทำงานร่วมกันหลายคน** อย่างเช่นการทำงานร่วมกันในบริษัท ติดตั้ง SVN Server ไว้ที่เครื่องกลางเครื่องหนึ่ง ส่วน SVN Client ก็ติดตั้งเครื่องใครเครื่องมัน 

ทั้งสองแบบนี้ถึงโครงสร้างดูจะแตกต่างกัน แต่ในการทำงานนั้นไม่แตกต่างกันเลย 


## ทำความเข้าใจกันก่อน ##
เนื่องจาก SVN ที่แบ่งออกเป็น 2 ส่วนคือส่วน Server และส่วน Client นั้น ในหนังสือเล่มนี้หลักๆจึงแบ่งแยกออกเป็น 2 ส่วนเช่นกัน ถึงแม้โมเดลของ SVN มันจะเป็น Server และ Client ในหนังสือเล่มนี้จะติดตั้งโปรแกรมทั้งสองลงไปในเครื่องเพียงตัวเดียว แบบทำงานคนเดียว ถึงกระนั้นท่านก็จะสามารถมองภาพออกว่าหากจะแยก SVN Server ไปติดตั้งเครื่องต่างหากทำอย่างไร

SVN Server นั้นจะใช้โปรแกรม VisualSVN Server 3.2 ส่วนตัว SVN Client จะใช้โปรแกรม TortoiseSVN 1.8.10


## System Requirement ##

**VisualSVN Server 3.2**

**ระบบปฏิบัติการ**

- Windows Server 2008 หรือสูงกว่า 
- Windows Vista หรือสูงกว่า 

**ความต้องการฮาร์ดแวร์ขั้นต่ำ**

- ซีพียู 1.4 GHz
- แรม 512 MB
- พื้นที่ฮาร์ดดิสก์ 50 MB 


**TortoiseSVN 1.8.10**

**ระบบปฏิบัติการ**

- Windows XP Service Pack 3 หรือสูงกว่า 

**ความต้องการฮาร์ดแวร์ขั้นต่ำ**

ในเว็บไซต์ TortoiseSVN เองก็ไม่ได้บอกเรื่องความต้องการฮาร์ดแวร์ขั้นต่ำไว้ เอาเป็นว่าหากเครื่องคอมพิวเตอร์สามารถลง Windows XP Service Pack 3 ได้ ฮาร์ดแวร์ก็ผ่านฉลุยแน่นอน

